{"version":3,"file":"static/js/784.713ef0f4.chunk.js","mappings":"8OASgCA,EAAiBC,CAAAA,SAAAA,aAAAA,WAAAA,WAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAzCC,uBAEO,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAOXC,EAAW,sBAEXC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,SAAUF,EAAAA,KACPG,IAAI,EAAG,4CACPL,SAASA,GACZM,SAAUJ,EAAAA,KAAaF,SAASA,KA4B5BO,GAASC,EAAAA,EAAAA,IAAU,CAAEC,cAvCL,CACpBL,SAAU,GACVE,SAAU,IAqC8BL,iBAAAA,EAAkBS,SAzB3C,WACf,IAAQN,EAAuBO,EAAvBP,SAAUE,EAAaK,EAAbL,SAElBM,MAAM,SAAD,OAAUlB,EAAV,cAAoC,CACvCmB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBb,SAAAA,EACAE,SAAAA,MAGDY,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAC0B,IAAD,IAAL,MAArBA,EAAKC,aACPC,aAAaC,QAAQ,QAArB,OAA8BH,QAA9B,IAA8BA,GAA9B,UAA8BA,EAAMI,cAApC,aAA8B,EAAcC,OAC5CH,aAAaC,QAAQ,WAArB,OAAiCH,QAAjC,IAAiCA,GAAjC,UAAiCA,EAAMI,cAAvC,aAAiC,EAAcE,KAAKvB,UACpDN,EAAS,IAAK,CAAE8B,SAAS,KC3CjCC,IAAAA,KAAU,CACRC,MAAO,4BACPC,KAAM,+CACNC,kBAAmB,UACnBC,MAAO,QACPC,MAAO,IACPC,kBAAkB,UD8CZC,EACN7B,EADM6B,aAAcC,EACpB9B,EADoB8B,aAAcC,EAClC/B,EADkC+B,OAAQC,EAC1ChC,EAD0CgC,QAASC,EACnDjC,EADmDiC,WAAY7B,EAC/DJ,EAD+DI,OAGjE,OACE,gBAAK8B,UAAU,OAAf,UACE,kBAAM/B,SAAU2B,EAAhB,WACE,+CACA,4BACE,kDACA,kBACEK,KAAK,OACLC,KAAK,WACLC,SAAUR,EACVS,OAAQL,EACRM,MAAOnC,EAAOP,SACdqC,UAAWH,EAAOlC,UAAYmC,EAAQnC,SAAW,QAAU,KAE5DkC,EAAOlC,UAAYmC,EAAQnC,WAC1B,kBAAMqC,UAAU,gBAAhB,UAAiCH,EAAOlC,SAAxC,WAGJ,4BACE,8CACA,kBACEsC,KAAK,WACLC,KAAK,WACLC,SAAUR,EACVS,OAAQL,EACRM,MAAOnC,EAAOL,SACdmC,UAAWH,EAAOhC,UAAYiC,EAAQjC,SAAW,QAAU,KAE5DgC,EAAOhC,UAAYiC,EAAQjC,WAC1B,kBAAMmC,UAAU,gBAAhB,UAAiCH,EAAOhC,SAAxC,WAGJ,0BACE,mBAAQoC,KAAK,SAAb,kCAEF,0BACE,SAAC,KAAD,CAAMK,GAAG,YAAT,kC","sources":["components/Views/auth/Login/Login.jsx","utils/swal.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { swal } from \"../../../../utils/swal\";\r\n\r\nimport \"../Auth.styles.css\";\r\n\r\nconst { REACT_APP_API_ENDPOINT: API_ENDPOINT } = process.env;\r\n\r\nexport default function Login() {\r\n  const navigate = useNavigate();\r\n\r\n  const initialValues = {\r\n    userName: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const required = \"* Campo obligatorio\";\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    userName: Yup.string()\r\n      .min(4, \"La cantidad mínima de caracteres es 4\")\r\n      .required(required),\r\n    password: Yup.string().required(required),\r\n  });\r\n\r\n  const onSubmit = () => {\r\n    const { userName, password } = values;\r\n\r\n    fetch(`https:${API_ENDPOINT}auth/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        userName,\r\n        password,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.status_code === 200) {\r\n          localStorage.setItem(\"token\", data?.result?.token);\r\n          localStorage.setItem(\"userName\", data?.result?.user.userName);\r\n          navigate(\"/\", { replace: true });\r\n        } else {\r\n          swal();\r\n        }\r\n      });\r\n  };\r\n\r\n  const formik = useFormik({ initialValues, validationSchema, onSubmit });\r\n\r\n  const { handleChange, handleSubmit, errors, touched, handleBlur, values } =\r\n    formik;\r\n\r\n  return (\r\n    <div className=\"auth\">\r\n      <form onSubmit={handleSubmit}>\r\n        <h1>Iniciar sesión</h1>\r\n        <div>\r\n          <label>Nombre de usuario</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"userName\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.userName}\r\n            className={errors.userName && touched.userName ? \"error\" : \"\"}\r\n          />\r\n          {errors.userName && touched.userName && (\r\n            <span className=\"error-message\">{errors.userName} </span>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label>Contraseña</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.password}\r\n            className={errors.password && touched.password ? \"error\" : \"\"}\r\n          />\r\n          {errors.password && touched.password && (\r\n            <span className=\"error-message\">{errors.password} </span>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">Iniciar sesión</button>\r\n        </div>\r\n        <div>\r\n          <Link to=\"/register\">Registrarme</Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import Swal from \"sweetalert2\";\r\n\r\nexport const swal = () => {\r\n  Swal.fire({\r\n    title: \"Credenciales inválidas\",\r\n    text: \"Por favor introduzca credenciales válidas\",\r\n    confirmButtonText: \"Aceptar\",\r\n    width: \"400px\",\r\n    timer: 10000,\r\n    timerProgressBar: true,\r\n  });\r\n};\r\n"],"names":["API_ENDPOINT","process","REACT_APP_API_ENDPOINT","Login","navigate","useNavigate","required","validationSchema","Yup","shape","userName","min","password","formik","useFormik","initialValues","onSubmit","values","fetch","method","headers","body","JSON","stringify","then","response","json","data","status_code","localStorage","setItem","result","token","user","replace","Swal","title","text","confirmButtonText","width","timer","timerProgressBar","handleChange","handleSubmit","errors","touched","handleBlur","className","type","name","onChange","onBlur","value","to"],"sourceRoot":""}